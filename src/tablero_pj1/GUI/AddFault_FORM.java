
package tablero_pj1.GUI;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jssc.SerialPortException;

/**
 *  Formulario para agregar una falta compuesta
 * @author josepablocruzbaas
 */
public class AddFault_FORM extends javax.swing.JFrame {

    /**
     * Inicializador
     */
    public AddFault_FORM() {
        initComponents();
        this.addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e){
                    setVisible(false);
                    parent.enable();
                }
            });
    }
    /**
     * Inicializa el padre,para regresar al sistema principal.
     * @param   a   Objeto de tipo ScoreBoeardController.
     */
    public void setParent(ScoreBoardController a){
        parent = a;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Home_Bool = new javax.swing.JRadioButton();
        Guest_Bool = new javax.swing.JRadioButton();
        Send_Button = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        Player_Number = new javax.swing.JTextField();
        Fault = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Falta y jugador");
        setResizable(false);

        Home_Bool.setText("Home");
        Home_Bool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Home_BoolActionPerformed(evt);
            }
        });

        Guest_Bool.setText("Guest");
        Guest_Bool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Guest_BoolActionPerformed(evt);
            }
        });

        Send_Button.setText("Send!");
        Send_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_ButtonActionPerformed(evt);
            }
        });

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        Player_Number.setColumns(2);
        Player_Number.setText("00");
        Player_Number.setToolTipText("");

        Fault.setColumns(2);
        Fault.setText("0");

        jLabel1.setText("# de Jugador");

        jLabel2.setText("Falta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Home_Bool))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Guest_Bool)
                    .addComponent(Player_Number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Cancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Send_Button)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Home_Bool)
                    .addComponent(Guest_Bool))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Player_Number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Fault, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Send_Button)
                    .addComponent(Cancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Cancela la accion.
     * @param   evt     evt
     */
    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        this.setVisible(false);
        parent.enable();
    }//GEN-LAST:event_CancelActionPerformed
    /**
     * Envia los datos por el puerto serial en tramas de 4 bits.
     * @param   evt     evt
     */
    private void Send_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_ButtonActionPerformed
        int fault;
        int player;
        try{
            fault = Integer.parseInt(Fault.getText());
            player = Integer.parseInt(Player_Number.getText());
            if(fault>9 || player>99){
                throw new Exception();
            }
            //Preparamos el interprete
            if(Home_Bool.isSelected()){
                tablero_pj1.Tablero_Pj1
                    .COM.write(parent.CMD_TEMP_FLT_A);
            }else if(Guest_Bool.isSelected()){
                tablero_pj1.Tablero_Pj1
                    .COM.write(parent.CMD_TEMP_FLT_B);
            }else{
                JOptionPane.showMessageDialog(null,
                    "Seleccione el equipo al que pertenece el jugador "+player);
                return;
            }
            //
            //  Envios de 4 bits
            //
            //  Enviar jugador y endflag
            send(player);
            
            //Enviar falta y endflag
            send(fault);
            
            //Finalizamos el comando
            tablero_pj1.Tablero_Pj1
                    .COM.write(parent.CMD_END_FLAG);
            
            this.parent.FaultAndPlayer(fault, player,Home_Bool.isSelected());
            
            this.setVisible(false);
            parent.enable();
            
        }catch(SerialPortException spe){
            JOptionPane.showMessageDialog(null,
                    "Verifique el estado de la conexión y vuelva a intentarlo");
        }catch(NullPointerException npe){
            JOptionPane.showMessageDialog(null,
                    "Verifique el estado de la conexión y vuelva a intentarlo");
        }catch(NumberFormatException nfe){
            JOptionPane.showMessageDialog(null,
                    "Entrada invalida");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    "Entrada demasiado grande");
        }
    }//GEN-LAST:event_Send_ButtonActionPerformed
    /**
     * Selecciona al equipo local para enviar dato.
     * @param   evt     evt
     */
    private void Home_BoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Home_BoolActionPerformed
        if(Guest_Bool.isSelected()){
            Guest_Bool.setSelected(false);
        }
    }//GEN-LAST:event_Home_BoolActionPerformed
    /**
     * Selecciona al equipo visitante para enviar dato.
     * @param   evt     evt
     */
    private void Guest_BoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Guest_BoolActionPerformed
        if(Home_Bool.isSelected()){
            Home_Bool.setSelected(false);
        }
    }//GEN-LAST:event_Guest_BoolActionPerformed
    /**
     * Envia el dato por el puerto serie en tramas de 4 bits.
     * @param   data    Dato que se desea enviar
     */
    private void send(int data){
        try{
            //Tramas de 4 bits
            tablero_pj1.Tablero_Pj1.COM.write( (byte) (( data&0xF000)>>16 ));
            tablero_pj1.Tablero_Pj1.COM.write( (byte) (( data&0xF00)>>8 ));
            tablero_pj1.Tablero_Pj1.COM.write( (byte) (( data&0xF0)>>4 ));
            tablero_pj1.Tablero_Pj1.COM.write( (byte) ( data&0xF) );
            //Fin de trama
            tablero_pj1.Tablero_Pj1
                    .COM.write(parent.CMD_END_FLAG);
        }catch(SerialPortException spe){
                JOptionPane.showMessageDialog(null,
                        "Error de transmisión.");
        }catch(NullPointerException npe){
                JOptionPane.showMessageDialog(null,
                        "Por favor establezca "
            + "comunicación desde el panel de configuración.");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,
                    "Entrada invalida. Ingrese un valor valido!"
                    +" Varifique la entrada y vuelva a intentarlo!");
        }
    }
    private ScoreBoardController parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JTextField Fault;
    private javax.swing.JRadioButton Guest_Bool;
    private javax.swing.JRadioButton Home_Bool;
    private javax.swing.JTextField Player_Number;
    private javax.swing.JButton Send_Button;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
